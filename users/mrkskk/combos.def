//   name     			 result    		 	  chord keys

// Right thumb

/*
// QWERTY

COMB(F_J_ADJUST, OSL(ADJUST), COMD_F, COMD_J)  //
// qwerty Danish keycodes
COMB(AE_AE, DK_AE, CONT_A, KC_E)
COMB(OE_OE, DK_OE, KC_O, KC_E)
COMB(AO_AA, DK_AA, CONT_A, KC_O)

// Home row qwerty

// bottom row qwerty
COMB(XC_COPY, COPY, RALT_X, NAV2_C)
COMB(CV_PASTE, PASTE, NAV2_C, KC_V)
COMB(ZX_UNDO, UNDO, RALT_X, KC_Z)
COMB(VB_REDO, REDO, KC_B, KC_V)
*/

// HANDSDOWN

// NUMBERS
COMB(NAV_1, KC_1, NAV_T, KC_P)
COMB(NAV_2, KC_2, NAV_T, KC_COMM)
COMB(NAV_3, KC_3, NAV_T, KC_DOT)
COMB(NAV_4, KC_4, NAV_T, COMD_I)
COMB(NAV_5, KC_5, NAV_T, HMR_E)
COMB(NAV_6, KC_6, NAV_T, ALT_O)
COMB(NAV_7, KC_7, NAV_T, KC_U)
COMB(NAV_8, KC_8, NAV_T, KC_K)
COMB(NAV_9, KC_9, NAV_T, KC_J)
COMB(NAV_0, KC_0, NAV_T, DK_AA)
COMB(NAV_MINUS, MINUS, NAV_T, KC_Y)
COMB(NAV_UNDCS, UNDSC, NAV_T, S_QUOT)

COMB(KJ_JE, KC_JE, KC_J, KC_K)

COMB(H_I_ADJUST, OSL(ADJUST), COMD_H, COMD_I)
// COMB(M_U_ADJUST, OSL(FN_LAYER), COMD_H, KC_U)

COMB(SPC_N_CAPSWRD, CAPSWRD, SPC_DOT, SFT_N)
// CAPSWRD
COMB(TE_SNAKECSE, SNAKECSE, NUM_ENT, SYM_DEL)  // SNAKECSE

COMB(GM_MEDIA, MEDIA, KC_G, KC_M)  // will exit due to trns on the layer

COMB(TH_MOUSE, MOUSE, NAV_T, COMD_H)        // for entering mouse layer
COMB(ACL12_MOUSE, MOUSE, KC_ACL1, KC_ACL2)  // for exiting mouse layer

COMB(UK_NUM, TG(NUMPAD), KC_U, KC_K)
COMB(EXIT_NUMPAD, TG(NUMPAD), KC_7, KC_8)
COMB(IE_SYM, OSL(SYMBOLS), HMR_E, COMD_I)  //
COMB(PCOMM_FN, OSL(FN_LAYER), KC_P, KC_COMM)

COMB(BL_COPY, COPY, ALT_B, KC_L)   //
COMB(LD_PASTE, PASTE, KC_L, KC_D)  //
COMB(XB_UNDO, UNDO, KC_V, ALT_B)   //
COMB(DV_REDO, REDO, KC_D, KC_V)    //

// easier bigrams

COMB(HD_HV, KC_HV, COMD_H, KC_D)  //
COMB(CG_CL, KC_CL, KC_C, KC_G)    // CL bigram

COMB(FT_FL, KC_FL, KC_F, KC_L)
COMB(UAE_PAA, KC_PAA, KC_U, DK_AA)

// avoid uncomfortable lateral and movement of index finger
COMB(AAE_OE, DK_OE, CONT_A, DK_AE)
COMB(RV_V, KC_V, CONT_R, KC_V)

/*
COMB(SPC_COL_SHIFT, COLSFT, S(KC_DOT), SPC_DOT)
COMB(SPC_SEMC_SHIFT, SEMCOLSFT, S(KC_COMM), SPC_DOT)
COMB(SPC_QUES_SHIFT, QUESSFT, QUES, SPC_DOT)
COMB(SPC_EXLM_SHIFT, EXLMSFT, EXLM, SPC_DOT)
*/
